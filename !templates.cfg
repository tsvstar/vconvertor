[DETECT]
# Describe detection patterns
#
# Format: 
#	name => CONTAINTER|"VIDEO"|WIDTHxHEIGHT@FPS|VIDEO_BRATE|RATIO|VCODEC|VPROFILE|VSCAN_TYPE|VSCAN_ORDER|"AUDIO"|A_CHANNEL|A_CODEC|A_CODEC2|A_BRATE|A_ALIGNMENT|A_DELAY_MS
# 	? - replace unimportant parameter
#
# * name/value_string are trimmed; tab and spaces are allowed; 
# * Could assign several patterns to same name (use '.unique_suffix' at the end of name)
# * Same video could match to several pattern
# * if name starts from __ - special case

#{container}|VIDEO|{w}x{h}@{fps}|{vbrate} {vbmeasure}|{ratio}|{vcodec}|{vprofile}|{vscan}|{vscanorder}|AUDIO|{achannel}|{acodec}|{acodec2}|{abrate}|{aalign}|{adelay_ms}
#{CONTAINTER}|VIDEO|{WIDTH}x{HEIGHT}@{FPS}|{V_BRATE} {V_BRATE_TYPE}|{RATIO}={AR_X}:{AR_Y}|{VCODEC}|{VPROFILE}|{VSCAN_TYPE}|{VSCAN_ORDER}|AUDIO|{A_CHANNEL}|{A_CODEC}|{A_CODEC2}|{A_BRATE}|{A_ALIGNMENT}|{A_DELAY_MS}
#BDAV|VIDEO|1920x1080@50.000|25.2 Mbps|1.778=16:9|AVC|High@L4.2|Progressive||AUDIO|2|AC3|AC3|256 Kbps||1020.000
#MPEG-4|VIDEO|1440x1080@25.000|12.0 Mbps|1.778=16:9|AVC|Main@L4.0|Progressive||AUDIO|2|AAC LC|AAC LC|128 Kbps||

sony:720   => ?|VIDEO|1440x1080@29.970|12.0 Mbps|1.778=16:9|AVC|Main@L4.0|Progressive||AUDIO|?|?|?|?|?|?
sony:720.1 => ?|VIDEO|1440x1080@25.000|12.0 Mbps|1.778=16:9|AVC|Main@L4.0|Progressive||AUDIO|?|?|?|?|?|?
sony:mts   => ?|VIDEO|1920x1080@50.000|25.2 Mbps|1.778=16:9|AVC|Main@L4.0|Progressive||AUDIO|?|?|?|?|?|?
sony:mts.1 => ?|VIDEO|1920x1080@50.000|25.2 Mbps|1.778=16:9|AVC|High@L4.2|Progressive||AUDIO|2|AC3|AC3|256 Kbps|?|?

__dga      => BDAV|VIDEO|?x?@?|? ?|?=?:?|?|?|Progressive||AUDIO|?|?|?|?|?|?
__forbid.1 => ?|VIDEO|?x?@?|? ?|?=?:?|?|?|Interlaced|?|AUDIO|?|?|?|?|?|?	# DO NOT ALLOW INTERLACED VIDEO


[TEMPLATE]
# Describe modifications of encoding templates
#
# Format:
#   new_template = another_template{adjustment1, adjustment2,... }
#			where "adjustment" - are the same as for encoding patterns

# MkvMerge with give DAR
mkvmux_dar = mkvmux{ DAR:AR=@{RATIO}@, DAR:X=@{AR_X}@, DAR:Y=@{AR_Y}@ }

# X264 encoding for HQ video with high FPS
x264avchd  = x264base{ KeyframeInterval=@FN_INTFPS@, NbBframes=5, NoFastPSkip=true, NbRefFrames=7, IPFactor=1.3, PBFactor=1.4, BframeBias=50, x264BFramePyramid=2, AVCLevel=L_52 }


[ENCODE]
# Describe encoding patterns
#
# Format:
#	name => BITRATE|AVS_TEMPLATE|INDEX_JOB|VIDEO_1PASS|VIDEO_2PASS|AUDIO_ENCODE|MUX_JOB
# 		* - means get value from upper section [ sony:720 -> sony -> 'BASIC' -> '?' ]
# 		? - means unknown (should come from other section or if no such one from '?' )
#               empty - means skip this pass (if this possible)
# 		{name1=value1,name2=value2,..} after name means adjusting. 
#					There:  tag1:tag2:tag3=value	- find tag3 in tag2 in tag1 (tag1 have to exists, if any other tags doesn't exists create it) and set value
#						?tag1:tag2:tag3=value   - find tag3 in tag2 in tag1 (all tags have to exists) and set value
#						+tag1:tag2:tag3=value   - find tag3 in tag2 in tag1 (tag1 have to exists, if tag2 doesn't exists create it, last tag(tag3) is always created) and set value
#													(FilesDelete:string=@SRCPATH@)
#						not required to get full path - each level lookup in all descendants recursive
#
#						%option%=value - change option value
#						@key@=value - change value of key
#						@name@ in value - is replaced by specific values from keys
#							@SRCPATH@         - path to source file
#							@SRCPATH_WO_EXT@  - path to source file, but cut its extension
#							@SRCPATH_VIDEO@	  - path of source for video encoding (source or intermediary file)
#							@SRCPATH_AUDIO@   - path of source for video encoding (source or intermediary file)
#							@BITRATE@	  - value of requested bitrate
#							@{DETECT_TOKEN}@  (for example @{V_PROFILE}@, @{A_CHANNEL}@ - see list in [DETECT] section)
#
#
#		if bitrate <0 - use

# TODO: if starts from [int] - means priority. No collision if two patterns have filled value but different priority(lesser = higher priority)
# TODO: pattern1+pattern2 -> resolve

# {BITRATE}|{AVS_TEMPLATE}|{INDEX_JOB}|{VIDEO_PASS}|{AUDIO_ENCODE}|{MUX_JOB}


#?		=> |base.avs|ffindex.idx|?|?|?                                       		# TOP OF ANY HIERARCHY (complete default)
TOP		=> |base.avs|ffindex.idx|?|?|?                                       		# TOP OF ANY HIERARCHY (complete default)
BASIC		=> -1000|?|?|x264base|aac_base|mkvmux						# 2ND LAYER OF HIERARCHY - unknown video will be parsed in this way
__dga		=> |dga.avs|dga.idx|?|?|?							# some files could be indexed/parsed in specific way only

3gp		=> |?|?|x264base|aac_base{Bitrate=32}|mkvmux					# zopa 3000, 5000
canon:480	=> 1000|									# CANON S95 480p: use BASIC + ask for bitrate=1000
canon:720	=> 3000|									# CANON S95 480p: use BASIC + ask for bitrate=3000 (2000 will be also good enough)
sony:480	=> -1000|?|?|x264base||mkvmux
fuji:480	=> 1000|?|?|x264base|mp3_abr{AbrBitrate=32}|mkvmux

sony:720	=> -5000|?{%EXTRA_AVS%=+Resize1440}|?|?||mkvmux					# Default encoding for RX100 (resize to make square pixel; no more 5000kbps needed)
sony:720.new	=> 5000|?|?|x264base{CustomEncoderOptions=--sar 4:3}||mkvmux_dar		# Alternate encoding for RX100 (keep anamorphic). {SUFFIX=.new}

sony:720.xvid	=> -2|?|?|xvid_cq{1pass}||
sony:mts 	=> 10010|?|?|x264avchd|?|mkvmux							# RX100 AVCHD - Specific tunes 5000,8000,12000. !!!TOTEST!!! Looks like audio is not in sync
sony:mts.old	=> -8000|?|?|x264base{KeyframeInterval=50,NbBframes=6,BframeBias=50}|?|mkvmux 	# Old style - try to make 1second GOP and increase number of B-frames {SUFFIX=.old}

COPY_AUDIO	=> -1|?|?|?||?
COPY_VIDEO	=> -1|?|?||?|?


BASIC.crf 	=> -1000|?|?|x264base{@BITRATE@=@CRF@,EncodingMode=9}|aac_base|mkvmux

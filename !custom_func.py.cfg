# Define here custom functions:
#  * Function have to be named in upper case and starts from 'FN_'
#  * It is mapped to @FN_NAME@ key and can be used both as setter and getter
#  * This is Python 2.7 file

# Purpose: Divide FPS/2
# Usage:   - in template:	<FPS>@FN_FPS2@</FPS>       - called as getter
#	   - in adjustment	{@FN_FPS2@=,...other_adj}  - called as setter
#				or {@FN_FPS2@=@{FPS}@,...} - called as setter with value
#				or {@{FPS}@=@FN_FPS2@,...} - called as getter
def FN_FPS2( keys, opts, *kw ):
    fps = kw[0].strip() if (kw and kw[0].strip()) else keys['@{FPS}@']
    newfps = "%.4f" % (float(fps)/2)
    if len(kw):
	# called as setter
	keys['@{FPS}@'] = newfps
	#print "SETTER %s" % newfps
    else:
        # called as getter
	pass		
	#print "GETTER %s" % newfps

    return newfps
